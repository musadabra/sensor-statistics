[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Oracle Corporation Java 17.0.3)
[debug]       Load.loadUnit: plugins took 269.5382ms
[debug]       Load.loadUnit: defsScala took 1.4803ms
[debug] [Loading] Scanning directory C:\Users\dell\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\dell\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 23.4086 ms
[debug]           Load.resolveProject(global-plugins) took 55.7417ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\dell\.sbt\1.0\plugins, plugins: List(<none>))) took 103.719ms
[debug] [Loading] Done in C:\Users\dell\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 141.8913ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4253ms
[debug]     Load.loadUnit(file:/C:/Users/dell/.sbt/1.0/plugins/, ...) took 439.3766ms
[debug]   Load.apply: load took 720.9305ms
[debug]   Load.apply: resolveProjects took 6.447ms
[debug]   Load.apply: finalTransforms took 68.1435ms
[debug]   Load.apply: config.delegates took 11.3416ms
[debug]   Load.apply: Def.make(settings)... took 654.2195ms
[debug]   Load.apply: structureIndex took 181.2609ms
[debug]   Load.apply: mkStreams took 5.764ms
[info] loading global plugins from C:\Users\dell\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3433.5251ms
[debug]           Load.loadUnit: plugins took 28.0007ms
[debug]           Load.loadUnit: defsScala took 0.0052ms
[debug] [Loading] Scanning directory C:\Users\dell\Documents\Scala\sensor-statistics\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\dell\Documents\Scala\sensor-statistics\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.6121 ms
[debug]               Load.resolveProject(sensor-statistics-build) took 1.3764ms
[debug]             Load.loadTransitive: finalizeProject(Project(id sensor-statistics-build, base: C:\Users\dell\Documents\Scala\sensor-statistics\project, plugins: List(<none>))) took 4.5977ms
[debug] [Loading] Done in C:\Users\dell\Documents\Scala\sensor-statistics\project, returning: (sensor-statistics-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 6.8958ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.0143ms
[debug]         Load.loadUnit(file:/C:/Users/dell/Documents/Scala/sensor-statistics/project/, ...) took 35.9745ms
[debug]       Load.apply: load took 37.7338ms
[debug]       Load.apply: resolveProjects took 0.1085ms
[debug]       Load.apply: finalTransforms took 11.2823ms
[debug]       Load.apply: config.delegates took 0.5184ms
[debug]       Load.apply: Def.make(settings)... took 82.2481ms
[debug]       Load.apply: structureIndex took 44.3191ms
[debug]       Load.apply: mkStreams took 0.0031ms
[info] loading project definition from C:\Users\dell\Documents\Scala\sensor-statistics\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 513.2813ms
[debug]     Load.loadUnit: defsScala took 0.0034ms
[debug] [Loading] Scanning directory C:\Users\dell\Documents\Scala\sensor-statistics
[debug]       Load.loadUnit: mkEval took 8.1884ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.0221 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 2.6017ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\dell\Documents\Scala\sensor-statistics, plugins: List(<none>))) took 6.0771ms
[debug] [Loading] Done in C:\Users\dell\Documents\Scala\sensor-statistics, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 271.8653ms
[debug]     Load.loadUnit: cleanEvalClasses took 26.528ms
[debug]   Load.loadUnit(file:/C:/Users/dell/Documents/Scala/sensor-statistics/, ...) took 812.9317ms
[debug] Load.apply: load took 815.8469ms
[debug] Load.apply: resolveProjects took 0.1799ms
[debug] Load.apply: finalTransforms took 13.9254ms
[debug] Load.apply: config.delegates took 0.5451ms
[debug] Load.apply: Def.make(settings)... took 95.962ms
[debug] Load.apply: structureIndex took 47.2719ms
[debug] Load.apply: mkStreams took 0.004ms
[info] set current project to sensor-statistics (in build file:/C:/Users/dell/Documents/Scala/sensor-statistics/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(run SensorStatistics C:\Users\dell\Documents\Scala\Learning-scala, None, None)
[debug] Evaluating tasks: Compile / run
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
